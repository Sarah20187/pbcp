name: "pbcp"
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  hdf5_data_param {
    source: "examples/pbcp/train.txt"
    batch_size: 64
  }
  include: { phase: TRAIN }
}
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  hdf5_data_param {
    source: "examples/pbcp/test.txt"
    batch_size: 2
  }
  include: { phase: TEST }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  # learning rate and decay multipliers for the filters
  param { lr_mult: 1}
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2}
  convolution_param {
    num_output: 6
    kernel_size: 3
    stride: 0
    pad: 0
    weight_filler {
      type: "xavier"
    }
	bias_filler {
	  type: "constant"
	}
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  # learning rate and decay multipliers for the filters
  param { lr_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 }
  convolution_param {
    num_output: 4
    kernel_size: 3
    stride: 0
    pad: 0
    weight_filler {
      type: "xavier"
    }
	bias_filler {
	  type: "constant"
	}
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv3"
  # learning rate and decay multipliers for the filters
  param { lr_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 }
  convolution_param {
    num_output: 4
    kernel_size: 3
    stride: 0
    pad: 0
    weight_filler {
      type: "xavier"
    }
	bias_filler {
	  type: "constant"
	}
  }
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}


layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  # learning rate and decay multipliers for the filters
  param { lr_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 }
  convolution_param {
    num_output: 4
    kernel_size: 3
    stride: 0
    pad: 0
    weight_filler {
      type: "xavier"
    }
	bias_filler {
	  type: "constant"
	}
  }
}

layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}

layer {
  name: "fc5"
  type: "InnerProduct"
  # learning rate and decay multipliers for the weights
  #param { lr_mult: 1 }
  # learning rate and decay multipliers for the biases
  #param { lr_mult: 2 }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
	bias_filler {
	  type: "constant"
	}
  }
  bottom: "conv4"
  top: "fc5"
}


layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc5"
  bottom: "label"
}
